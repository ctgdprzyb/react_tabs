{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","activeTabId","some","tab","id","className","map","undefined","href","onClick","handleTabChange","title","find","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"yMAYaA,EAAO,SAAC,GAAuD,IAAD,EAApDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,cAAeC,EAA+B,EAA/BA,cACpCC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAC5CA,EACAD,EAAK,GAAGM,GAQZ,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GACR,OACE,4CACE,UAAQ,OACJF,IAAgBE,EAAIC,GACpB,CAAEC,UAAW,kBACbE,GAJN,aAME,mBACEC,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,kBArBD,SAACN,GACnBA,EAAIC,KAAOL,GACbC,EAAcG,GAmBaO,CAAgBP,IAHjC,SAKGA,EAAIQ,kBAQjB,qBAAKN,UAAU,QAAQ,UAAQ,aAA/B,mBACIP,EAAKc,MAAK,SAAAT,GAAG,OAAIA,EAAIC,KAAOL,YADhC,aACI,EAA4Cc,cCrCzCf,EAAc,CACzB,CAAEM,GAAI,QAASO,MAAO,QAASE,QAAS,eACxC,CAAET,GAAI,QAASO,MAAO,QAASE,QAAS,eACxC,CAAET,GAAI,QAASO,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAAS,SAAnD,mBAAOhB,EAAP,KAAsBiB,EAAtB,KAMA,OACE,sBAAKX,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IAFH,UAGGP,EAAKc,MAAK,SAAAT,GAAG,OAAIJ,IAAkBI,EAAIC,aAH1C,aAGG,EAA4CO,SAG/C,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeA,EACfC,cAfgB,SAACG,GACrBa,EAAiBb,EAAIC,WCnBzBa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.16f519a9.chunk.js","sourcesContent":["interface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ninterface TabsProps {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n}\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }: TabsProps) => {\n  const activeTabId = tabs.some(tab => tab.id === selectedTabId)\n    ? selectedTabId\n    : tabs[0].id;\n\n  const handleTabChange = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            return (\n              <li\n                data-cy=\"Tab\"\n                {...activeTabId === tab.id\n                  ? { className: 'is-active' }\n                  : undefined}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleTabChange(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {(tabs.find(tab => tab.id === selectedTabId)?.content)}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {tabs.find(tab => selectedTabId === tab.id)?.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}